shiny::runApp()
shiny::runApp()
setwd("~/Documents/GitHub/BrawStatsPlus")
shiny::runApp()
pwd
setwd("~/Documents/GitHub/BrawStatsPlus")
wd
shiny::runApp()
getwd
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
source("~/Documents/GitHub/BrawStatsPlus/plotStatistic.R", echo=TRUE)
shiny::runApp()
r2llr(data$rs[,i],data$ns[,i],STMethod,effect$world)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages('fitdistrplus')
shiny::runApp()
n<-expectedResult$result$nval
print(fitdist(n-min(n)+1,"gamma",method="mge"))
library(fitdistrplus)
n<-expectedResult$result$nval
print(fitdist(n-min(n)+1,"gamma",method="mge"))
n<-expectedResult$result$nval
fitdist(n-min(n)+1,"gamma",method="mge")
n
fitdist(n-min(n)+1,"gamma",method="mge")
size(n)
fitdist(n[,1]-min(n)+1,"gamma",method="mge")
fd<-fitdist(n[,1]-min(n)+1,"gamma",method="mge")
fd$estimate
fd$estimate[shape]
fd$estimate["shape"]
fd$estimate$shape
print(fd$estimate)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
min(pDens_z)
max(pDens_z)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
print(fd$estimate)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
max(y50)
max(y50a)
shiny::runApp()
shiny::runApp()
shiny::runApp()
ploy(y50)
plot(y50)
max(y50)
max(y50a)
areaData<-c(y50+y50a,rev(y50a))+effect$world$populationNullp
max(y50)
max(y50a)
areaData<-c(y50-y50a,rev(y50a))+effect$world$populationNullp
areaData<-c(y50a-y50,rev(y50a))+effect$world$populationNullp
areaData<-1-c(y50a-y50,rev(y50a))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
max(y50e)
max(y50ea)
max(y50ea-y50e)
pts2<-data.frame(vals=vals+vals_offset,y50e=y50ea-y50,y25e=y25e,y75e=y75e)
pts2<-data.frame(vals=vals+vals_offset,y50e=y50ea-y50,y25e=y25e,y75e=y75e)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
areaData<-c(y50,yalle)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
y50
yalle
shiny::runApp()
shiny::runApp()
shiny::runApp()
rw2n(0.3,0.8)
rn2w(0.3,85)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
result$rIV
force(r)
any(abs(r)>1)
shiny::runApp()
shiny::runApp()
r=sqrt(0.25^2-0.12^2)
r
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
fun(c(0.325,0.74))
fun(c(0.325,0.24))
fun(c(0.325,0.94))
fun(c(-2.82,9.2))
fminsearch(fun,c(0.3,0.3))
fun<-function(vals,zs,ns) {
-getLogLikelihood(zs,ns,"Exp",vals[1],vals[2],metaAnalysis$meta_psigAnal)
}
fminsearch(fun,c(0.3,0.3),zs=zs,ns=ns)
fminsearch(fun,as.vector(0.3,0.3),zs=zs,ns=ns)
fminsearch(fun,as.vector(c(0.3,0.3)),zs=zs,ns=ns)
fun<-function(x,zs,ns) {
-getLogLikelihood(zs,ns,"Exp",x[1],x[2],metaAnalysis$meta_psigAnal)
}
fminsearch(fun,as.vector(c(0.3,0.3)),zs=zs,ns=ns)
fminsearch(fn=fun,as.vector(c(0.3,0.3)),zs=zs,ns=ns)
fminsearch(fn=fun,x0=as.vector(c(0.3,0.3)),zs=zs,ns=ns)
fminsearch(fn=fun,x0=as.vector(c(0.3,0.3)),zs=zs,ns=ns,method="Hooke-Jeeves")
fminsearch(fn=fun,x0=as.vector(c(0.3,0.3)),zs=zs,ns=ns,method="Nelder-Meade")
fminsearch(fn=fun,x0=as.vector(c(0.3,0.3)),zs=zs,ns=ns,method="Nelder-Mead")
fun(as.vector(c(0.3,0.3)),zs=zs,ns=ns)
fun(as.vector(c(0.3,0.7)),zs=zs,ns=ns)
nmkb(fn=fun,x0=as.vector(c(0.3,0.3)),zs=zs,ns=ns,method="Nelder-Mead")
install.packages("dfoptim")
library("dfoptim")
nmkb(fn=fun,x0=as.vector(c(0.3,0.3)),zs=zs,ns=ns,method="Nelder-Mead")
nmkb(fun,as.vector(c(0.3,0.3)),zs=zs,ns=ns,method="Nelder-Mead")
nmkb(fun,as.vector(c(0.3,0.3)),)
fun<-function(x) {
-getLogLikelihood(zs,ns,"Exp",x[1],x[2],metaAnalysis$meta_psigAnal)
}
nmkb(fun,as.vector(c(0.3,0.3)),)
fun(c(0.3,0.3))
result<-fminunc(c(0.3,0.3),fun)
result<-fminc(c(0.3,0.3),fun,upper=c(1,1),lower=c(0,0))
result<-fmincon(c(0.3,0.3),fun,upper=c(1,1),lower=c(0,0))
install.packages("NlcOptim")
library("NlcOptim")
install.packages("NlcOptim")
result<-fmincon(c(0.3,0.3),fun,upper=c(1,1),lower=c(0,0))
result<-fmincon(c(0.3,0.3),fun,ub=c(1,1),lb=c(0,0))
shiny::runApp()
shiny::runApp()
fmincon(c(0.3,0.3),fun,ub=c(1,1),lb=c(0,0))
fun(c(0,1))
fmincon(c(0.3,0.3),fun,ub=c(1,1)-0.05,lb=c(0,0)+0.05)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
y>x
effect$world$populationPDF
metaResult$effect$world$populationPDF
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
