res1
ncoeff1-DV1var
ncoeff2-DV2var
ncoeff3-DV12var
wsd(v1*v2*mF$coefficients[["iv1:iv2"]])
wsd(v1*v2)*mF$coefficients[["iv1:iv2"]]
wsd((v1-mean(v1))*(v2-mean(v2)))*mF$coefficients[["iv1:iv2"]]
a1<-predict.lm(mF,data.frame(iv1=-wsd(iv1),iv2=iv2))
a1<-predict.lm(mF,data.frame(iv1=-wsd(v1),iv2=iv2))
a1<-predict.lm(mF,data.frame(iv1=-wsd(v1),iv2=v2))
a2<-predict.lm(mF,data.frame(iv1=wsd(v1),iv2=v2))
a1-a2
wsd(a1-a2)
ncoeff1
wsd(a1-mF$fitted.values)
wsd(a2-mF$fitted.values)
a2<-predict.lm(mF,data.frame(iv1=0,iv2=v2))
wsd(a2-mF$fitted.values)
wsd(a1-a2)
a2<-predict.lm(mF,data.frame(iv1=v1,iv2=0))
wsd(a2)
a2<-predict.lm(mF,data.frame(iv1=v1,iv2=1))
wsd(a2)
a2<-predict.lm(mF,data.frame(iv1=v1,iv2=0))
a2<-predict.lm(mF,data.frame(iv1=v1,iv2=v2[1]))
wsd(a2)
a2<-predict.lm(mF,data.frame(iv1=v1,iv2=v2[2]))
wsd(a2)
a2<-predict.lm(mF,data.frame(iv1=v1,iv2=levels(v2)[3]))
wsd(a2)
a2<-predict.lm(mF,data.frame(iv1=wsd(v1),iv2=levels(v2)[3]))
wsd(a2)
a2
a2<-predict.lm(mF,data.frame(iv1=-wsd(v1),iv2=levels(v2)[3]))
a2
ncoeff1
a2<-predict.lm(mF,data.frame(iv1=-wsd(v1),iv2=v2)
)
a1<-predict.lm(mF,data.frame(iv1=wsd(v1),iv2=v2))
wsd(a1-a2)
wsd(v1)
a1<-predict.lm(mF,data.frame(iv1=1,iv2=v2))
a2<-predict.lm(mF,data.frame(iv1=2,iv2=v2))
wsd(a1-a2)
a2<-predict.lm(mF,data.frame(iv1=0,iv2=v2))
wsd(a1-a2)
m1
a2<-predict.lm(mF,data.frame(iv1=m1[2],iv2=v2))
a1<-predict.lm(mF,data.frame(iv1=m1[1],iv2=v2))
a1
a2
wsd(a1-a2)
a1-a2
a1+a2
wsd(a1,a2)
v
predict.lm(mF,data.frame(iv1=m1[1],iv2=levels(v2)[1]))
predict.lm(mF,data.frame(iv1=m1[1],iv2=levels(v2)[2]))
predict.lm(mF,data.frame(iv1=m1[1],iv2=levels(v2)[3]))
predict.lm(mF,data.frame(iv1=m1[1],iv2=levels(v2)))
wsd(predict.lm(mF,data.frame(iv1=m1[1],iv2=levels(v2))))
ncoeff1
ncoeff2
mean(predict.lm(mF,data.frame(iv1=m1[1],iv2=levels(v2))))
mean(predict.lm(mF,data.frame(iv1=m1[2],iv2=levels(v2))))
mean(predict.lm(mF,data.frame(iv1=0,iv2=levels(v2))))
mean(predict.lm(mF,data.frame(iv1=m1[2],iv2=v2))
)
mean(predict.lm(mF,data.frame(iv1=m1[1],iv2=v2)))
mean(predict.lm(mF,data.frame(iv1=m1[1],iv2=levels(v2))))
shiny::runApp()
shiny::runApp()
)
shiny::runApp()
mF$model$iv1
predict.lm(mF,mF$model)
predict.lm(mF,mF$model)
rawData<-mF$model
rawData$iv1<-0
shiny::runApp()
data$participant<-1
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
grep("a:b",":")
grep(":",a:b")
grep(":","a:b")
grep("[^:]*","a:b")
grep(":",a:b",value=TRUE)
grep(":","a:b",value=TRUE)
grep("^:","a:b",value=TRUE)
grep("[^:]*","a:b",value=TRUE)
grep("[^\:]*","a:b",value=TRUE)
grep("[^:]+","a:b",value=TRUE)
grep("[:alnum:]+","a:b",value=TRUE)
regexpr("[:alnum:]+","a:b",value=TRUE)
regexpr("[:alnum:]+","a:b")
regexpr(":","a:b")
regexp(":","a:b")
grep(":","a:b")
grep(":","a:b",value=TRUE)
str_subset("a:b",":")
str_subset("a:b","^:")
grep(":","a:b",value=TRUE)
grep("[a:b]+","a:b")
grep("[a-b]+","a:b")
grep("[^:]+","a:b")
g<-grep("[^:]+","a:b")
g<-grep("[a-z]+","a:b")
strsplit("a:b",":")
g<-strsplit("a:b",":")
g<-strsplit("a1:b2",":")
g[1]
g[[1]]
g[1][2]
g[1][1]
g[[1]][1]
g[[1]][2]
a<-matrix(rand(3,2))
a
a<-rand(3,2)
a-rowMeans(a)
a-colMeans(a)
t(t(a)-colMeans(a))
t(t(a)-rowMeans(a))-colMeans(a)
a-rowMeans(a)-colMeans(a)
(a-rowMeans(a))-colMeans(a)
(a-colMeans(a))-rowwMeans(a)
(a-colMeans(a))-rowMeans(a)
t(t(a)-colMeans(a))-rowMeans(a)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
a
t(t(a)-colMeans(a))-rowMeans(a)
a-mean(a)
sd(a)
sd(t(t(a)-colMeans(a))-rowMeans(a))
shiny::runApp()
shiny::runApp()
shiny::runApp()
anRaw<-anNormC
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
cbind(1,1)
shiny::runApp()
is.factor(iv1)
is.factor(result$iv)
is.factor(result$iv2)
data.frame(rand(10,1),rand(10,1))
r=data.frame(rand(10,1),rand(10,1))
r
paste0("iv",1)
paste0("iv",1:10)
paste0("iv",1:2)->names(r)
r
levels(c(1,2,3))
shiny::runApp()
shiny::runApp()
shiny::runApp()
df
r.direct
p.direct
df
shiny::runApp()
df
anRaw$Df
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
resultNormData[[2]]
resultNormData[[3]]
shiny::runApp()
list("iv1"=3)
list(iv1=3)
list(iv1=3)
shiny::runApp()
shiny::runApp()
2:1
shiny::runApp()
shiny::runApp()
mTerms
shiny::runApp()
mF
mF$model
model.frame(mF)
class(mF)
class(mF)[1]
data<-model.frame(mF)
any(class(mF)[1]==c("lmerMod","glmerMod"))
data$participant<-1
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
allData
allData
shiny::runApp()
shiny::runApp()
sqrt(1.2144893)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
input$Evidence
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
result$df
result$df1
result$df
result$df1
result$df1o
result$df1o
result$df
shiny::runApp()
allData
shiny::runApp()
result$df
shiny::runApp()
result$df
shiny::runApp()
result$df
shiny::runApp()
result$df
result$df1
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
df
shiny::runApp()
anNormC
anNormC$Df
anNormC$Df[2:4]
if (grepl("Intercept",rownames(anRaw)[[1]])) {n1<-2} else {n1<-1}
n2<-nrow(anRaw)-1
df<-anRaw$Df[n1:n2]
shiny::runApp()
df
anRaw
shiny::runApp()
2:1
shiny::runApp()
shiny::runApp()
anRaw
df<-c(1,2,2)
anRaw
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
addFields
addFields
shiny::runApp()
shiny::runApp()
shiny::runApp()
design$sClustering<-0
shiny::runApp()
class(effect)
class(effect$world)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
v=c(1,2)
paste0(format(v))
paste0(format(v),collapse="")
paste(format(v),collapse="",sep=",")
paste(format(v),sep=",",collapse="")
paste(format(v),sep="  ",collapse="")
paste(v,sep="  ",collapse="")
paste(v,sep="  ")
paste(v,sep=",")
paste(v,collapse=",")
shiny::runApp()
shiny::runApp()
data.frame(top=name,newList)
c(header,newList$top)
c(fields,newList$header)
c(subfields,newList$fields)
newList$fields
newList
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
as.numeric("2,3")
as.numeric(strsplit("2,3",","))
strsplit("2,3",",")
strsplit("2,3",",")[[1]]
as.numeric(strsplit("2,3",",")[[1]])
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
strsplit("2,3",",")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runGitHub("BrawStats","rjwatt42")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
pts1
pts1[1:13,]
nrow(pts1)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shortHand
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
rep(1:3,4)
rep(t(1:3),4)
rep(matrix(1:3,1,3),4)
rep(matrix(1:3,3,1),4)
rep(matrix(1:3,1,3),1,4)
rep(matrix(1:3,1,3),4,4)
matrix(1:3)
rep(matrix(1:3),c(1,2)
)
outer(3)
outer(3,2)
rep(1:3,each=2)
meshgrid(1:3,1:4)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
source("~/Documents/GitHub/BrawStatsPlus/getVariables.R")
IV2<-makeVar("Perfectionism","Categorical",ncats=2,cases="Yes,No")
IV2$cases
source("~/Documents/GitHub/BrawStatsPlus/getVariables.R")
IV2<-makeVar("Perfectionism","Categorical",ncats=2,cases="Yes,No")
source("~/Documents/GitHub/BrawStatsPlus/getVariables.R")
source("~/Documents/GitHub/BrawStatsPlus/getVariables.R")
IV2<-makeVar("Perfectionism","Categorical",ncats=2,cases="Yes,No")
source("~/Documents/GitHub/BrawStatsPlus/getVariables.R")
IV2<-makeVar("Perfectionism","Categorical",ncats=2,cases="Yes,No")
source("~/Documents/GitHub/BrawStatsPlus/getVariables.R")
IV2<-makeVar("Perfectionism","Categorical",ncats=2,cases="Yes,No")
IV<-makeVar("IQ","Interval",mu=100,sd=15)
DV<-makeVar("ExamScore","Interval",mu=60,sd=15)
sample<-makeSample(IV,IV2,DV,defaults$effect,defaults$design)
IV2<-makeVar("Perfectionism","Categorical",ncats=2,cases="Yes,No")
IV<-makeVar("IQ","Interval",mu=100,sd=15)
DV<-makeVar("ExamScore","Interval",mu=60,sd=15)
sample<-makeSample(IV,IV2,DV,effect,design)
sample$iv2
IV2<-makeVar("Perfectionism","Categorical",ncats=2,cases="Yes,No")
IV<-makeVar("IQ","Interval",mu=100,sd=15)
DV<-makeVar("ExamScore","Interval",mu=60,sd=15)
sample<-makeSample(IV,IV2,DV,effect,design)
source("~/Documents/GitHub/BrawStatsPlus/sampleMake.R")
IV2<-makeVar("Perfectionism","Categorical",ncats=2,cases="Yes,No")
IV<-makeVar("IQ","Interval",mu=100,sd=15)
DV<-makeVar("ExamScore","Interval",mu=60,sd=15)
sample<-makeSample(IV,IV2,DV,effect,design)
shiny::runApp()
source("~/Documents/GitHub/BrawStatsPlus/sampleMake.R")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
log(0)
log(-10)
source("~/Documents/GitHub/BrawStatsPlus/f_Johnson_pdf.R")
mylog(-10)
mylog(seq(-10,10,0.1))
shiny::runApp()
source("~/Documents/GitHub/BrawStatsPlus/sampleMake.R")
sd(rt(100000,2,0))
sd(rt(100000,2,0))
sd(rt(100000,2,0))
sd(rt(100000,2,0))
sd(rcauchy(100000,0,1))
sd(rcauchy(100000,0,1))
sd(rcauchy(100000,0,1))
sd(rcauchy(100000,0,1))
sd(rcauchy(100000,0,1))
sd(rcauchy(100000,0,1))
qnorm(0.75)
source("~/Documents/GitHub/BrawStatsPlus/sampleMake.R")
source("~/Documents/GitHub/BrawStatsPlus/sampleMake.R")
sd(rt(100000,3,0))
sd(rt(100000,3,0))
sd(rt(100000,3,0))
sd(rt(100000,3,0))/sqrt(3)
source("~/Documents/GitHub/BrawStatsPlus/sampleMake.R")
source("~/Documents/GitHub/BrawStatsPlus/sampleMake.R")
sd(rt(100000,2,0))
sd(rt(1000000,2,0))
sd(rt(1000000,2,0))
sd(rt(1000000,2,0))
