nResN<-nRes
kResN<-kRes
# doublePlot(nmaxs[2:length(nmaxs)],expression(n[max]),rbind(kRes,kRes_sim),Llabel,rbind(nRes,nRes_sim),Plabel,xlog=TRUE)
doublePlot(nmaxs[2:length(nmaxs)],expression(n[max]),rbind(kRes,kRes_sim),rbind(kCI,kCI_sim),Llabel,rbind(nRes,nRes_sim),rbind(nCI,nCI_sim),Plabel,xlog=TRUE)
doublePlot(nmaxs[2:length(nmaxs)],expression(n[max]),rbind(wRes,wRes_sim),NULL,"w",rbind(fdrRes,fdrRes_sim),NULL,"FDR",xlog=TRUE)
an$best
source("~/Documents/GitHub/Paper/runMetaAnalysis.R")
#########################################
# split by year
years<-seq(1985,2015,2)
metaAnal<-list(meta_pdf="Exp",meta_psigAnal=TRUE,meta_nullAnal=TRUE)
nRes<-c()
nCI<-c()
kRes<-c()
kCI<-c()
sRes<-c()
nRes_expect<-c()
kRes_expect<-c()
for (i in 1:(length(years)-1)) {
useY<-(my_data$year>=years[i]) & (my_data$year<years[i+1])
metaData<-list(result=list(rIV=my_data$r_s[useY],nval=my_data$n[useY],df1=my_data$df1[useY]))
an<-runMetaAnalysis(metaAnal,metaData)
nRes<-cbind(nRes,an$best$Nullmax)
kRes<-cbind(kRes,an$best$Kmax)
nCI<-cbind(nCI,matrix(an$best$nullCI,ncol=1))
kCI<-cbind(kCI,matrix(an$best$kCI,ncol=1))
sRes<-cbind(sRes,an$best$Smax)
showAnalysis(an,paste0("year=",years[i]))
ne<-0
ke<-0
for (ni in 2:length(nmaxs)) {
useN<-my_data$n>nmaxs[ni-1] & my_data$n<=nmaxs[ni]
count<-sum(useN & useY)
ne<-ne+count*nResN[ni-1]
ke<-ke+count*kResN[ni-1]
}
nRes_expect<-c(nRes_expect,ne/sum(useY))
kRes_expect<-c(kRes_expect,ke/sum(useY))
}
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes,kRes_expect),rbind(kCI,kCI),Llabel,
rbind(nRes,nRes_expect),rbind(nCI,nCI),Plabel)
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes),kCI,Llabel,
rbind(nRes),nCI,Plabel)
#########################################
# split by year
years<-seq(1985,2015,2)
metaAnal<-list(meta_pdf="Exp",meta_psigAnal=TRUE,meta_nullAnal=TRUE)
nRes<-c()
nCI<-c()
kRes<-c()
kCI<-c()
sRes<-c()
nRes_expect<-c()
kRes_expect<-c()
for (i in 1:(length(years)-1)) {
useY<-(my_data$year>=years[i]) & (my_data$year<years[i+1])
metaData<-list(result=list(rIV=my_data$r_s[useY],nval=my_data$n[useY],df1=my_data$df1[useY]))
an<-runMetaAnalysis(metaAnal,metaData)
nRes<-cbind(nRes,an$best$Nullmax)
kRes<-cbind(kRes,an$best$Kmax)
nCI<-cbind(nCI,matrix(an$best$nullCI,ncol=1))
kCI<-cbind(kCI,matrix(an$best$kCI,ncol=1))
sRes<-cbind(sRes,an$best$Smax)
showAnalysis(an,paste0("year=",years[i]))
ne<-0
ke<-0
nc<-0
for (ni in 2:length(nmaxs)) {
useN<-my_data$n>nmaxs[ni-1] & my_data$n<=nmaxs[ni]
count<-sum(useN & useY)
ne<-ne+count*nResN[ni-1]
ke<-ke+count*kResN[ni-1]
nc<-nc+count
}
nRes_expect<-c(nRes_expect,ne/nc)
kRes_expect<-c(kRes_expect,ke/nc)
}
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes),kCI,Llabel,
rbind(nRes),nCI,Plabel)
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes,kRes_expect),rbind(kCI,kCI),Llabel,
rbind(nRes,nRes_expect),rbind(nCI,nCI),Plabel)
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes,kRes_expect),rbind(kCI,kCI-kRes+kRes_expect),Llabel,
rbind(nRes,nRes_expect),rbind(nCI,nCI-nRes+nRes_expect),Plabel)
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes,kRes_expect),rbind(kCI),Llabel,
rbind(nRes,nRes_expect),rbind(nCI),Plabel)
source("~/Documents/GitHub/Paper/Plots.R")
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes,kRes_expect),rbind(kCI),Llabel,
rbind(nRes,nRes_expect),rbind(nCI),Plabel)
source("~/Documents/GitHub/Paper/Plots.R")
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes,kRes_expect),rbind(kCI),Llabel,
rbind(nRes,nRes_expect),rbind(nCI),Plabel)
source("~/Documents/GitHub/Paper/Plots.R")
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes,kRes_expect),rbind(kCI),Llabel,
rbind(nRes,nRes_expect),rbind(nCI),Plabel)
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes,kRes_expect),rbind(kCI),Llabel,
rbind(nRes,nRes_expect),rbind(nCI),Plabel,legendLabels=c("actual","expected"))
source("~/Documents/GitHub/Paper/Plots.R")
#########################################
# split by year
years<-seq(1985,2015,2)
metaAnal<-list(meta_pdf="Exp",meta_psigAnal=TRUE,meta_nullAnal=TRUE)
nRes<-c()
nCI<-c()
kRes<-c()
kCI<-c()
sRes<-c()
nRes_expect<-c()
kRes_expect<-c()
for (i in 1:(length(years)-1)) {
useY<-(my_data$year>=years[i]) & (my_data$year<years[i+1]) & (my_data$n<=300)
metaData<-list(result=list(rIV=my_data$r_s[useY],nval=my_data$n[useY],df1=my_data$df1[useY]))
an<-runMetaAnalysis(metaAnal,metaData)
nRes<-cbind(nRes,an$best$Nullmax)
kRes<-cbind(kRes,an$best$Kmax)
nCI<-cbind(nCI,matrix(an$best$nullCI,ncol=1))
kCI<-cbind(kCI,matrix(an$best$kCI,ncol=1))
sRes<-cbind(sRes,an$best$Smax)
showAnalysis(an,paste0("year=",years[i]))
ne<-0
ke<-0
nc<-0
for (ni in 2:length(nmaxs)) {
useN<-my_data$n>nmaxs[ni-1] & my_data$n<=nmaxs[ni]
count<-sum(useN & useY)
ne<-ne+count*nResN[ni-1]
ke<-ke+count*kResN[ni-1]
nc<-nc+count
}
nRes_expect<-c(nRes_expect,ne/nc)
kRes_expect<-c(kRes_expect,ke/nc)
}
# doublePlot(years[1:(length(years)-1)],"year",rbind(kRes),kCI,Llabel,
#            rbind(nRes),nCI,Plabel)
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes,kRes_expect),rbind(kCI),Llabel,
rbind(nRes,nRes_expect),rbind(nCI),Plabel,legendLabels=c("actual","expected"))
#########################################
source("OriginalData.R")
original_my_data<-my_data
# NB - throws loads of warnings because of some unexpected contents in excel file
# may also throw 2 errors if variable my_data already exists
# ignore both
#########################################
# 2D histogram of zs vs n
df<-data.frame(x=my_data$z_s,y=my_data$n)
use<-my_data$n<=250 & my_data$z_s<3
df<-df[use,]
g<-ggplot(df) + geom_bin_2d(aes(x=x,y=y),bins=51,show.legend=FALSE,drop=FALSE)
ns<-seq(5,300)
zs<-qnorm(1-alpha/2,0,1/sqrt(ns-3))
ds<-data.frame(x=zs,y=ns)
g<-g+geom_line(data=ds,aes(x=x,y=y),colour="red")
zs<-qnorm(1-alpha/200,0,1/sqrt(ns-3))
ds<-data.frame(x=zs,y=ns)
g<-g+geom_line(data=ds,aes(x=x,y=y),colour="orange")
g<-g+ylab("n")+xlab(expression(z[s]))
g<-g + scale_x_continuous(limits=c(0,1.5))
g<-g + scale_fill_gradient(low="white",high=maincolours$windowC)
g + plotTheme + theme(panel.background=element_rect(fill="white", colour="black"),)
#########################################
# 2D histogram of zs vs n
df<-data.frame(x=my_data$z_s,y=my_data$n)
use<-my_data$n<=300 & my_data$z_s<3
df<-df[use,]
g<-ggplot(df) + geom_bin_2d(aes(x=x,y=y),bins=51,show.legend=FALSE,drop=FALSE)
ns<-seq(5,300)
zs<-qnorm(1-alpha/2,0,1/sqrt(ns-3))
ds<-data.frame(x=zs,y=ns)
g<-g+geom_line(data=ds,aes(x=x,y=y),colour="red")
zs<-qnorm(1-alpha/200,0,1/sqrt(ns-3))
ds<-data.frame(x=zs,y=ns)
g<-g+geom_line(data=ds,aes(x=x,y=y),colour="orange")
g<-g+ylab("n")+xlab(expression(z[s]))
g<-g + scale_x_continuous(limits=c(0,1.5))
g<-g + scale_fill_gradient(low="white",high=maincolours$windowC)
g + plotTheme + theme(panel.background=element_rect(fill="white", colour="black"),)
#########################################
source("SetUp.R")
alpha<-0.05
nMax<-300
nMin<-5
#########################################
source("OriginalData.R")
original_my_data<-my_data
# NB - throws loads of warnings because of some unexpected contents in excel file
# may also throw 2 errors if variable my_data already exists
# ignore both
#########################################
# find siblings etc
papers<-unique(my_data$Source)
my_data$Siblings<-my_data$Source*0
my_data$Studies<-my_data$Source*0
for (i in 1:length(papers)) {
use<-my_data$Source==papers[i]
my_data$Studies[use]<-sum(use)
ns<-unique(my_data$n[use])
for (j in 1:length(ns)) {
usen<-use & (my_data$n==ns[j])
my_data$Siblings[usen]<-sum(usen)
}
}
#########################################
# 2D histogram of zs vs n
df<-data.frame(x=my_data$z_s,y=my_data$n)
use<-my_data$n<=nMax & my_data$z_s<3
df<-df[use,]
g<-ggplot(df) + geom_bin_2d(aes(x=x,y=y),bins=51,show.legend=FALSE,drop=FALSE)
ns<-seq(5,nMax)
zs<-qnorm(1-alpha/2,0,1/sqrt(ns-3))
ds<-data.frame(x=zs,y=ns)
g<-g+geom_line(data=ds,aes(x=x,y=y),colour="red")
zs<-qnorm(1-alpha/200,0,1/sqrt(ns-3))
ds<-data.frame(x=zs,y=ns)
g<-g+geom_line(data=ds,aes(x=x,y=y),colour="orange")
g<-g+ylab("n")+xlab(expression(z[s]))
g<-g + scale_x_continuous(limits=c(0,1.5))
g<-g + scale_fill_gradient(low="white",high=maincolours$windowC)
g + plotTheme + theme(panel.background=element_rect(fill="white", colour="black"),)
##########################################
# show distribution of year
years<-unique(my_data$year)
g<-ggplot()
df<-data.frame(d=my_data$year)
g<-g+geom_histogram(data=df,aes(x=d),binwidth=1,color="black",fill="white")
g<-g + xlab("year") + ylab("no. outputs") + plotTheme
g
##########################################
# show distribution of n
use<-my_data$n<=nMax & my_data$n>=nMin
g<-ggplot()
df<-data.frame(d=my_data$n[use])
g<-g+geom_histogram(data=df,aes(x=d),binwidth=5,color="white",fill="white")
g<-g + xlab("n") + plotTheme
g
##########################################
# show distribution of zs
use<-my_data$z_s<=1.5
g<-ggplot()
df<-data.frame(d=abs(my_data$z_s[use]))
g<-g+geom_histogram(data=df,aes(x=d),binwidth=0.02,color="white",fill="white")
g<-g + xlab(bquote(z[s])) + plotTheme
g
##########################################
# analysis comparing all models
metaAnal<-list(meta_pdf="All",meta_psigAnal=TRUE,meta_nullAnal=TRUE)
metaData<-list(result=list(rIV=my_data$r_s,nval=my_data$n,df1=my_data$df1))
anMain<-runMetaAnalysis(metaAnal,metaData)
showAnalysis(anMain,"All")
drawAnalysis(anMain,metaData)
#########################################
# split by n
# essentially a check for power analysis
nmaxs<-round(10^seq(log10(nMin),log10(nMax),length.out=11))
my_data_sim<-simData(anMain)
metaAnal<-list(meta_pdf="Exp",meta_psigAnal=TRUE,meta_nullAnal=TRUE)
nRes<-c()
nCI<-c()
kRes<-c()
kCI<-c()
sRes<-c()
nRes_sim<-c()
nCI_sim<-c()
kRes_sim<-c()
kCI_sim<-c()
sRes_sim<-c()
wRes<-c()
fdrRes<-c()
wRes_sim<-c()
fdrRes_sim<-c()
for (i in 2:length(nmaxs)) {
useN<-(my_data$n>nmaxs[i-1] & my_data$n<=nmaxs[i])
nvals<-my_data$n[useN]
metaData<-list(result=list(rIV=my_data$r_s[useN],nval=my_data$n[useN],df1=my_data$df1[useN]))
an<-runMetaAnalysis(metaAnal,metaData)
nRes<-cbind(nRes,an$best$Nullmax)
kRes<-cbind(kRes,an$best$Kmax)
nCI<-cbind(nCI,matrix(an$best$nullCI,ncol=1))
kCI<-cbind(kCI,matrix(an$best$kCI,ncol=1))
sRes<-cbind(sRes,an$best$Smax)
showAnalysis(an,paste0("n=",round(nmaxs[i])," "))
wAll<-0
wF<-0
for (ni in min(nvals):max(nvals)) {
weight<-sum(nvals==ni)/length(nvals)
zcrit<-qnorm(1-alpha/2,0,1/sqrt(ni-3))
w1<-ExpSamplingCDF(zcrit,an$best$Kmax,1/sqrt(ni-3))
w0<-alpha
w<-w0*an$best$Nullmax + w1*(1-an$best$Nullmax)
wAll<-wAll+w*weight
wF<-wF+w0/w*weight
}
wRes<-cbind(wRes,wAll)
fdrRes<-cbind(fdrRes,wF)
# simulated data
use<-(my_data_sim$n>nmaxs[i-1] & my_data_sim$n<=nmaxs[i])
metaData<-list(result=list(rIV=my_data_sim$r_s[use],nval=my_data_sim$n[use],df1=my_data_sim$df1[use]))
an<-runMetaAnalysis(metaAnal,metaData)
nRes_sim<-cbind(nRes_sim,an$best$Nullmax)
kRes_sim<-cbind(kRes_sim,an$best$Kmax)
nCI_sim<-cbind(nCI_sim,matrix(an$best$nullCI,ncol=1))
kCI_sim<-cbind(kCI_sim,matrix(an$best$kCI,ncol=1))
sRes_sim<-cbind(sRes_sim,an$best$Smax)
showAnalysis(an,paste0("sim:n=",round(nmaxs[i])," "))
wAll<-0
wF<-0
for (ni in min(nvals):max(nvals)) {
weight<-sum(nvals==ni)/length(nvals)
zcrit<-qnorm(1-alpha/2,0,1/sqrt(ni-3))
w1<-ExpSamplingCDF(zcrit,an$best$Kmax,1/sqrt(ni-3))
w0<-alpha
w<-w0*an$best$Nullmax + w1*(1-an$best$Nullmax)
wAll<-wAll+w*weight
wF<-wF+w0/w*weight
}
wRes_sim<-cbind(wRes_sim,wAll)
fdrRes_sim<-cbind(fdrRes_sim,wF)
}
#########################################
# split by n
# essentially a check for power analysis
nmaxs<-round(10^seq(log10(10),log10(nMax),length.out=11))
my_data_sim<-simData(anMain)
metaAnal<-list(meta_pdf="Exp",meta_psigAnal=TRUE,meta_nullAnal=TRUE)
nRes<-c()
nCI<-c()
kRes<-c()
kCI<-c()
sRes<-c()
nRes_sim<-c()
nCI_sim<-c()
kRes_sim<-c()
kCI_sim<-c()
sRes_sim<-c()
wRes<-c()
fdrRes<-c()
wRes_sim<-c()
fdrRes_sim<-c()
for (i in 2:length(nmaxs)) {
useN<-(my_data$n>nmaxs[i-1] & my_data$n<=nmaxs[i])
nvals<-my_data$n[useN]
metaData<-list(result=list(rIV=my_data$r_s[useN],nval=my_data$n[useN],df1=my_data$df1[useN]))
an<-runMetaAnalysis(metaAnal,metaData)
nRes<-cbind(nRes,an$best$Nullmax)
kRes<-cbind(kRes,an$best$Kmax)
nCI<-cbind(nCI,matrix(an$best$nullCI,ncol=1))
kCI<-cbind(kCI,matrix(an$best$kCI,ncol=1))
sRes<-cbind(sRes,an$best$Smax)
showAnalysis(an,paste0("n=",round(nmaxs[i])," "))
wAll<-0
wF<-0
for (ni in min(nvals):max(nvals)) {
weight<-sum(nvals==ni)/length(nvals)
zcrit<-qnorm(1-alpha/2,0,1/sqrt(ni-3))
w1<-ExpSamplingCDF(zcrit,an$best$Kmax,1/sqrt(ni-3))
w0<-alpha
w<-w0*an$best$Nullmax + w1*(1-an$best$Nullmax)
wAll<-wAll+w*weight
wF<-wF+w0/w*weight
}
wRes<-cbind(wRes,wAll)
fdrRes<-cbind(fdrRes,wF)
# simulated data
use<-(my_data_sim$n>nmaxs[i-1] & my_data_sim$n<=nmaxs[i])
metaData<-list(result=list(rIV=my_data_sim$r_s[use],nval=my_data_sim$n[use],df1=my_data_sim$df1[use]))
an<-runMetaAnalysis(metaAnal,metaData)
nRes_sim<-cbind(nRes_sim,an$best$Nullmax)
kRes_sim<-cbind(kRes_sim,an$best$Kmax)
nCI_sim<-cbind(nCI_sim,matrix(an$best$nullCI,ncol=1))
kCI_sim<-cbind(kCI_sim,matrix(an$best$kCI,ncol=1))
sRes_sim<-cbind(sRes_sim,an$best$Smax)
showAnalysis(an,paste0("sim:n=",round(nmaxs[i])," "))
wAll<-0
wF<-0
for (ni in min(nvals):max(nvals)) {
weight<-sum(nvals==ni)/length(nvals)
zcrit<-qnorm(1-alpha/2,0,1/sqrt(ni-3))
w1<-ExpSamplingCDF(zcrit,an$best$Kmax,1/sqrt(ni-3))
w0<-alpha
w<-w0*an$best$Nullmax + w1*(1-an$best$Nullmax)
wAll<-wAll+w*weight
wF<-wF+w0/w*weight
}
wRes_sim<-cbind(wRes_sim,wAll)
fdrRes_sim<-cbind(fdrRes_sim,wF)
}
# save these results for later
nResN<-nRes
kResN<-kRes
# doublePlot(nmaxs[2:length(nmaxs)],expression(n[max]),rbind(kRes,kRes_sim),Llabel,rbind(nRes,nRes_sim),Plabel,xlog=TRUE)
doublePlot(nmaxs[2:length(nmaxs)],expression(n[max]),rbind(kRes,kRes_sim),rbind(kCI,kCI_sim),Llabel,rbind(nRes,nRes_sim),rbind(nCI,nCI_sim),Plabel,xlog=TRUE)
doublePlot(nmaxs[2:length(nmaxs)],expression(n[max]),rbind(wRes,wRes_sim),NULL,"w",rbind(fdrRes,fdrRes_sim),NULL,"FDR",xlog=TRUE)
#########################################
# split by n
# essentially a check for power analysis
nmaxs<-round(10^seq(log10(20),log10(nMax),length.out=11))
my_data_sim<-simData(anMain)
metaAnal<-list(meta_pdf="Exp",meta_psigAnal=TRUE,meta_nullAnal=TRUE)
nRes<-c()
nCI<-c()
kRes<-c()
kCI<-c()
sRes<-c()
nRes_sim<-c()
nCI_sim<-c()
kRes_sim<-c()
kCI_sim<-c()
sRes_sim<-c()
wRes<-c()
fdrRes<-c()
wRes_sim<-c()
fdrRes_sim<-c()
for (i in 2:length(nmaxs)) {
useN<-(my_data$n>nmaxs[i-1] & my_data$n<=nmaxs[i])
nvals<-my_data$n[useN]
metaData<-list(result=list(rIV=my_data$r_s[useN],nval=my_data$n[useN],df1=my_data$df1[useN]))
an<-runMetaAnalysis(metaAnal,metaData)
nRes<-cbind(nRes,an$best$Nullmax)
kRes<-cbind(kRes,an$best$Kmax)
nCI<-cbind(nCI,matrix(an$best$nullCI,ncol=1))
kCI<-cbind(kCI,matrix(an$best$kCI,ncol=1))
sRes<-cbind(sRes,an$best$Smax)
showAnalysis(an,paste0("n=",round(nmaxs[i])," "))
wAll<-0
wF<-0
for (ni in min(nvals):max(nvals)) {
weight<-sum(nvals==ni)/length(nvals)
zcrit<-qnorm(1-alpha/2,0,1/sqrt(ni-3))
w1<-ExpSamplingCDF(zcrit,an$best$Kmax,1/sqrt(ni-3))
w0<-alpha
w<-w0*an$best$Nullmax + w1*(1-an$best$Nullmax)
wAll<-wAll+w*weight
wF<-wF+w0/w*weight
}
wRes<-cbind(wRes,wAll)
fdrRes<-cbind(fdrRes,wF)
# simulated data
use<-(my_data_sim$n>nmaxs[i-1] & my_data_sim$n<=nmaxs[i])
metaData<-list(result=list(rIV=my_data_sim$r_s[use],nval=my_data_sim$n[use],df1=my_data_sim$df1[use]))
an<-runMetaAnalysis(metaAnal,metaData)
nRes_sim<-cbind(nRes_sim,an$best$Nullmax)
kRes_sim<-cbind(kRes_sim,an$best$Kmax)
nCI_sim<-cbind(nCI_sim,matrix(an$best$nullCI,ncol=1))
kCI_sim<-cbind(kCI_sim,matrix(an$best$kCI,ncol=1))
sRes_sim<-cbind(sRes_sim,an$best$Smax)
showAnalysis(an,paste0("sim:n=",round(nmaxs[i])," "))
wAll<-0
wF<-0
for (ni in min(nvals):max(nvals)) {
weight<-sum(nvals==ni)/length(nvals)
zcrit<-qnorm(1-alpha/2,0,1/sqrt(ni-3))
w1<-ExpSamplingCDF(zcrit,an$best$Kmax,1/sqrt(ni-3))
w0<-alpha
w<-w0*an$best$Nullmax + w1*(1-an$best$Nullmax)
wAll<-wAll+w*weight
wF<-wF+w0/w*weight
}
wRes_sim<-cbind(wRes_sim,wAll)
fdrRes_sim<-cbind(fdrRes_sim,wF)
}
# save these results for later
nResN<-nRes
kResN<-kRes
# doublePlot(nmaxs[2:length(nmaxs)],expression(n[max]),rbind(kRes,kRes_sim),Llabel,rbind(nRes,nRes_sim),Plabel,xlog=TRUE)
doublePlot(nmaxs[2:length(nmaxs)],expression(n[max]),rbind(kRes,kRes_sim),rbind(kCI,kCI_sim),Llabel,rbind(nRes,nRes_sim),rbind(nCI,nCI_sim),Plabel,xlog=TRUE)
doublePlot(nmaxs[2:length(nmaxs)],expression(n[max]),rbind(wRes,wRes_sim),NULL,"w",rbind(fdrRes,fdrRes_sim),NULL,"FDR",xlog=TRUE)
#########################################
# split by year
years<-seq(1985,2015,2)
metaAnal<-list(meta_pdf="Exp",meta_psigAnal=TRUE,meta_nullAnal=TRUE)
nRes<-c()
nCI<-c()
kRes<-c()
kCI<-c()
sRes<-c()
nRes_expect<-c()
kRes_expect<-c()
for (i in 1:(length(years)-1)) {
useY<-(my_data$year>=years[i]) & (my_data$year<years[i+1]) & (my_data$n<=300)
metaData<-list(result=list(rIV=my_data$r_s[useY],nval=my_data$n[useY],df1=my_data$df1[useY]))
an<-runMetaAnalysis(metaAnal,metaData)
nRes<-cbind(nRes,an$best$Nullmax)
kRes<-cbind(kRes,an$best$Kmax)
nCI<-cbind(nCI,matrix(an$best$nullCI,ncol=1))
kCI<-cbind(kCI,matrix(an$best$kCI,ncol=1))
sRes<-cbind(sRes,an$best$Smax)
showAnalysis(an,paste0("year=",years[i]))
ne<-0
ke<-0
nc<-0
for (ni in 2:length(nmaxs)) {
useN<-my_data$n>nmaxs[ni-1] & my_data$n<=nmaxs[ni]
count<-sum(useN & useY)
ne<-ne+count*nResN[ni-1]
ke<-ke+count*kResN[ni-1]
nc<-nc+count
}
nRes_expect<-c(nRes_expect,ne/nc)
kRes_expect<-c(kRes_expect,ke/nc)
}
# doublePlot(years[1:(length(years)-1)],"year",rbind(kRes),kCI,Llabel,
#            rbind(nRes),nCI,Plabel)
doublePlot(years[1:(length(years)-1)],"year",rbind(kRes,kRes_expect),rbind(kCI),Llabel,
rbind(nRes,nRes_expect),rbind(nCI),Plabel,legendLabels=c("actual","expected"))
setwd("/Users/rogerwatt/Documents/GitHub/BrawStatsPlus")
list.of.packages<-c("shiny","shinyWidgets","shinyjs","shinyBS",
"ggplot2","tidyr","tools",
"mnormt","lme4","MuMIn",
"readxl","writexl","car","stringi","stringr","clipr","SuppDists","e1071","pracma",
"htmlwidgets","NlcOptim"
)
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
new.packages
setwd("/Users/rogerwatt/Documents/GitHub/BrawStatsPlus")
